.ta-center
  -# %img{:src => "http://insureth.mkvd.net/images/qrcode.gif"}/
  %img{src:"/img/poolsureth1.png"}


%section.hero
  .hero-body
  .container
  .columns.is-vcentered
    .column.is-8.is-offset-2
      %h3.title.text-white.has-text-centered.is-bold
        Configure your Insurance Contract





  .columns
    .column.is-10.is-offset-1
      .columns.is-vcentered
        .column.is-3
          .box.transparent
            .field
            %label.label Type of Travel
            .control
              .select
                %select{ name: "type" }
                  %option{ value: "insureth_flight" } Flight (InsurETH)
                  %option{ value: "etherisc_flight" } Flight (Etherisc)
                  %option{ value: "insureth_train" } Train (InsurETH)
                  %option{ value: "etherisc_train" } Train (Etherisc)
                  %option{ value: "missing_api_cruise" } Cruise
                  %option{ value: "missing_api_holiday" } Holiday
        .column.is-3
          .box.transparent
            .field
            %label.label API
            .control
              .select
                %select{ name: "api" }
                  %option{ value: "flightaware" } flightaware.com
                  %option{ value: "flightstats" } flightstats.com
                  %option{ value: "tfl" }         TFL tube
                  %option{ value: "custom_todo" } Custom
        .column.is-3
          .box.transparent
            .field
            %label.label Oracle
            .control
              .select
                %select{ name: "oracle" }
                  %option{ value: "oraclize" }     Oraclize
                  %option{ value: "reality_keys" } Reality Keys
                  %option{ value: "custom_todo" } Custom

        .column.is-3
          .box.transparent
            .field
            %label.label Policy
            .control
              .select
                %select{ name: "policy" }
                  %option{ value: "fixed" } Fixed reward
                  %option{ value: "flexi" } Flexible reward
                  %option{ value: "custom_todo" } Custom

  .s30
  .columns.is-vcentered
    .column.is-8.is-offset-2
      %div.ta-center
        %a.button.is-primary.is-medium.is-long.btn-configure
          Configure

  .s30
  %h2.ta-center Contract Source

  .s20
  .container
    .columns
      .column
        %textarea.textarea.is-long.is-tall.contract_source
          Click the 'Configure' button above to load the customised contract source.

.s50
.columns.is-vcentered
  .column.is-8.is-offset-2
    %div.ta-center
      %a.button.is-primary.is-medium.is-long.btn_contract_compile
        Compile

.s50

.columns.is-vcentered
  .column.is-8.is-offset-2
    .container
      .columns
        .column
          %h4.subtitle ABI
          %textarea.textarea.is-long.is-short.contract_abi
      .columns
        .column
          %h4.subtitle Bytecode
          %textarea.textarea.is-long.is-short.contract_bytecode


.s50

%p


%section.hero.is-grey
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-4.is-offset-4
          %h3.title.text-white.has-text-centered
            Deploy via MetaMask

      %p.ta-center
        Make sure your metamask is unlocked and
        %strong it doesn't point to MainNet

      .columns
        .column.is-6.is-offset-3
          %p Your MetaMask Address

          .metamask_address.bg-white.padded
          .s20

          %p Your (ETH) balance (in wei):

          .balance.bg-white.padded
          .s20

          %p Insurance Contract Address

          .contract_address.bg-white.padded
            \ 0x...
          .s20


      .column.is-8.is-offset-2
        %div.ta-center
          %a.button.is-primary.is-medium.is-long.deploy_contract_btn
            Deploy
.s50

%p

%section.hero.is-primary
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2
          %h3.title.text-white.has-text-centered.is-bold
            Test your contract as:

      .container
        .columns.is-vcentered
          .column.is-4.is-offset-2
            .box.transparent
              %div.ta-center
                %a.button.is-primary.is-medium{ href: "/#client" }
                  Client

          .column.is-4
            .box.transparent
              %div.ta-center
                %a.button.is-primary.is-medium{ href: "/#investor" }
                  Investor


-# Client page

.s50

%p

%section.hero.is-primary#client
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2
          %h2.title.text-white.has-text-centered.is-bold
            Get your Automated Insurance
          %h3.title.text-white.has-text-centered.is-bold
            Enter your flight number

          .field
            %label.label Flight Number
            .control
              %input.input{:placeholder => "ex: BA 123", :type => "text"}/


%section.hero.is-grey
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2
          %h3.title.text-white.has-text-centered.is-bold
            Insure for
          %h4.title.text-white.has-text-centered.is-bold
            %span.insure_amount_gbp 50
            Â£
          %h4.title.text-white.has-text-centered.is-bold
            \~
            %span.insure_amount_eth 0.3
            ETH

          -# .field
          -#   %label.label Amount
          -#   .control
          -#     %input.input{:placeholder => "ex: 1.2 Eth", :type => "text"}/
          .ta-center
            %input{:max => "100", :min => "30", :name => "insure_amount", :step => "5", :style => "width: 243px", :type => "range", :value => "50"}/

          .column.is-8.is-offset-2
            %div.ta-center
              %a.button.is-primary.is-medium
                Insure

%section
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2
          %h3.title.text-white.has-text-centered.is-bold
            Deposit 0.1 ETH to address:
          -# %h4.title.text-white.has-text-centered.is-bold
          -#   (This is a proof of concept, don't deposit any ether please)
          .ta-center
            %img{:src => "http://insureth.mkvd.net/images/qrcode.gif"}/
          %h4.title.text-white.has-text-centered.is-bold
            0x0462838f4e30223d51310c9725c51217481141c2

          .column.is-8.is-offset-2
            %div.ta-center
              %a.button.is-primary.is-medium
                \...
                -# TEMP: Deposit Done

%section.hero.is-primary
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2.ta-center
          %img{src:"/img/poolsureth-logo-small-1.svg"}
          %h3.title.text-white.has-text-centered.is-bold
            Your flight has been insured!

          .column.is-8.is-offset-2
            %div.ta-center
              %a.button.is-small.is-transparent
                Check the Contract (Loading...)

          %p.ta-center Thanks for using our service.



-# Investor page

.s50
.s50

%hr

.s50

%section.hero.is-grey#investor
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2
          %h2.title.text-white.has-text-centered.is-bold
            PoolSureETH lets you invest into an automated flight insurance service
          %h3.title.text-white.has-text-centered.is-bold
            Enter your flight number

%section
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2
          %h3.title.text-white.has-text-centered.is-bold
            Deposit any amount of ETH to address:
          %h4.title.text-white.has-text-centered.is-bold
            (This is a proof of concept, don't deposit any ether please)
          .ta-center
            %img{:src => "http://insureth.mkvd.net/images/qrcode.gif"}/
          %h4.title.text-white.has-text-centered.is-bold
            0x0462838f4e30223d51310c9725c51217481141c2

          .column.is-8.is-offset-2
            %div.ta-center
              %a.button.is-primary.is-medium
                \...
                -# TEMP: Deposit Done


%section.hero.is-primary
  .hero-body
    .container
      .columns.is-vcentered
        .column.is-8.is-offset-2.ta-center
          %img{src:"/img/poolsureth-logo-small-1.svg"}
          %h3.title.text-white.has-text-centered.is-bold
            You invested successfully!


          .column.is-8.is-offset-2
            %div.ta-center
              %a.button.is-small.is-transparent
                Check the Contract (Loading...)

          %p.ta-center Thanks for using our service.


%script.tmp_script{ type: "text/disabled" }
  :plain
    pragma solidity ^0.4.11;

    import "./usingOraclize.sol";
    import "./solidity_stringutils.sol";

    contract Poolsureth is usingOraclize {

        event newFlightTimeCheck(string flight_number);

        address public admin;

        function Poolsureth() {
          // the admin can't do anything at the moment, we just record the address that deployed the contract
            admin = msg.sender;
        }

        struct Policy {
          uint    id;
          address owner;
          uint    amount;
          string  flightCode;
          uint    arrivalTime;
          bool    delayed;
          bool    paid;
          bool    complete;
        }

        struct PoolSlice {
          uint    id;
          address owner;
          uint    amount;
          bool    withdrawn;
        }

        Policy[]    public policies;
        PoolSlice[] public pool_slices;

        /* url + json query (oraclize uses a format similar to jq's cli-tool) */
        string constant query_p0 =
        "json(https://mkvd.eu.ngrok.io/api/flights/providers/flightaware/flights/";
        /* part 1 is :id */
        string constant query_p2 = ").FlightInfoExResult.flights[-1]";
        /* we get only the last flight [-1] for simplicity but we should map trough them and find the desired one (ideally we should make the user select it via an UI or handle the search via the contract [#overkill ^^]) */


        /* client methods */

        function register(string _flightCode) payable {
          if (msg.value < 10000) return;  // you can't register without paying ethers

          // create policy
          Policy memory policy = Policy({
            id:          policies.length+1,
            owner:       msg.sender,
            amount:      msg.value,
            flightCode:  _flightCode,
            arrivalTime: 0,
            delayed:     false,
            paid:        false,
            complete:    false
          });
          policies.push(policy);

          /*if (users_balance[msg.sender] > 0) throw;*/
        }

        /* investor methods */

        function invest() payable {
          // create slice
          PoolSlice memory slice = PoolSlice({
            id:        pool_slices.length+1,
            owner:     msg.sender,
            amount:    msg.value,
            withdrawn: false
          });
          pool_slices.push(slice);
        }

        function withdraw(uint id) {
          PoolSlice memory slice = pool_slices[id-1];
          if(msg.sender != slice.owner) throw;
          if ( slice.id != 0 && !slice.withdrawn) {
            slice.withdrawn = true;
            pool_slices[id-1] = slice;
          }

          if(!slice.owner.send(slice.amount)) throw;
        }

        /* oracle methods */

        event newOraclizeQuery(string description);

        function checkFlightTime() {
          if (oraclize_getPrice("URL") > this.balance) {
            newOraclizeQuery("Oraclize query was NOT sent, please add some ETH to cover for the query fee");
          } else {
            string memory query_p1 = "BEE1337";
            string memory query = strConcat(
              query_p0,
              query_p1,
              query_p2
            );

            newOraclizeQuery("Oraclize query was sent, standing by for the answer..");
            oraclize_query(60, "URL", query);
          }
        }

        string public debug;

        function __callback(bytes32 myid, string result, bytes proof) {
          if (msg.sender != oraclize_cbAddress()) throw;
          debug = result;

          /* todo: trigger another function */
        }

        function payoutPolicy(Policy policy) private {
          if(policy.paid) throw;
          if(!policy.delayed || !policy.complete) throw;

          policy.paid = true;

          if(!policy.owner.send(policy.amount)) throw;
        }


        /* accessor methods - getters */

        function getPolicy(uint id) constant returns(uint _id, address _owner, uint _amount, string flightCode, uint arrivalTime, bool delayed, bool paid, bool complete) {
          Policy memory policy = policies[id-1];
          if ( policy.id != 0 ) {
            return (policy.id, policy.owner, policy.amount, policy.flightCode, policy.arrivalTime, policy.delayed, policy.paid, policy.complete);
          }
        }

        function getPoolSlice(uint id) constant returns(uint _id, address _owner, uint _amount, bool _withdrawn) {
          PoolSlice memory slice = pool_slices[id-1];
          if ( slice.id != 0 ) {
            return (slice.id, slice.owner, slice.amount, slice.withdrawn);
          }
        }

        /* counter methods */

        function policiesCount() constant returns(uint _count) {
          return policies.length;
        }

        function poolSlicesCount() constant returns(uint _count) {
          return pool_slices.length;
        }

    }
